// Mocks generated by Mockito 5.0.17 from annotations
// in tv/test/helpers/test_helper.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;
import 'dart:convert' as _i18;
import 'dart:typed_data' as _i19;

import 'package:dartz/dartz.dart' as _i2;
import 'package:http/http.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i8;
import 'package:tv/data/datasources/db/tv_show_database_helper.dart' as _i6;
import 'package:tv/data/datasources/tv_show_local_data_source.dart' as _i17;
import 'package:tv/data/datasources/tv_show_remote_data_source.dart' as _i15;
import 'package:tv/data/models/tv_show_detail_model.dart' as _i3;
import 'package:tv/data/models/tv_show_model.dart' as _i16;
import 'package:tv/data/models/tv_show_seasons.dart' as _i4;
import 'package:tv/data/models/tv_show_table.dart' as _i9;
import 'package:tv/domain/entities/tv_show.dart' as _i12;
import 'package:tv/domain/entities/tv_show_detail.dart' as _i13;
import 'package:tv/domain/entities/tv_show_season.dart' as _i14;
import 'package:tv/domain/repositories/tv_show_repository.dart' as _i10;
import 'package:tv/tv.dart' as _i11;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeTvShowDetailResponse_1 extends _i1.Fake
    implements _i3.TvShowDetailResponse {}

class _FakeTvShowSeasons_2 extends _i1.Fake implements _i4.TvShowSeasons {}

class _FakeResponse_3 extends _i1.Fake implements _i5.Response {}

class _FakeStreamedResponse_4 extends _i1.Fake implements _i5.StreamedResponse {
}

/// A class which mocks [TvShowDatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvShowDatabaseHelper extends _i1.Mock
    implements _i6.TvShowDatabaseHelper {
  MockTvShowDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i8.Database?> get database => (super.noSuchMethod(
      Invocation.getter(#database),
      returnValue: Future<_i8.Database?>.value()) as _i7.Future<_i8.Database?>);
  @override
  _i7.Future<int> insertWatchListTvShow(_i9.TvShowTable? tvShowTable) => (super
      .noSuchMethod(Invocation.method(#insertWatchListTvShow, [tvShowTable]),
          returnValue: Future<int>.value(0)) as _i7.Future<int>);
  @override
  _i7.Future<int> removeWatchlistTvShow(_i9.TvShowTable? tvShow) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlistTvShow, [tvShow]),
          returnValue: Future<int>.value(0)) as _i7.Future<int>);
  @override
  _i7.Future<List<Map<String, dynamic>>> getWatchlistTvShow() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTvShow, []),
              returnValue: Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i7.Future<List<Map<String, dynamic>>>);
  @override
  _i7.Future<Map<String, dynamic>?> getTvShowById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvShowById, [id]),
              returnValue: Future<Map<String, dynamic>?>.value())
          as _i7.Future<Map<String, dynamic>?>);
}

/// A class which mocks [TvShowRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvShowRepository extends _i1.Mock implements _i10.TvShowRepository {
  MockTvShowRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.Either<_i11.Failure, List<_i12.TvShow>>>
      getNowPlayingTvShows() =>
          (super.noSuchMethod(Invocation.method(#getNowPlayingTvShows, []),
                  returnValue:
                      Future<_i2.Either<_i11.Failure, List<_i12.TvShow>>>.value(
                          _FakeEither_0<_i11.Failure, List<_i12.TvShow>>()))
              as _i7.Future<_i2.Either<_i11.Failure, List<_i12.TvShow>>>);
  @override
  _i7.Future<_i2.Either<_i11.Failure, List<_i12.TvShow>>> getPopularTvShows() =>
      (super.noSuchMethod(Invocation.method(#getPopularTvShows, []),
              returnValue:
                  Future<_i2.Either<_i11.Failure, List<_i12.TvShow>>>.value(
                      _FakeEither_0<_i11.Failure, List<_i12.TvShow>>()))
          as _i7.Future<_i2.Either<_i11.Failure, List<_i12.TvShow>>>);
  @override
  _i7.Future<_i2.Either<_i11.Failure, List<_i12.TvShow>>>
      getTopRatedTvShows() =>
          (super.noSuchMethod(Invocation.method(#getTopRatedTvShows, []),
                  returnValue:
                      Future<_i2.Either<_i11.Failure, List<_i12.TvShow>>>.value(
                          _FakeEither_0<_i11.Failure, List<_i12.TvShow>>()))
              as _i7.Future<_i2.Either<_i11.Failure, List<_i12.TvShow>>>);
  @override
  _i7.Future<_i2.Either<_i11.Failure, _i13.TvShowDetail>> getTvShowDetail(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvShowDetail, [id]),
              returnValue:
                  Future<_i2.Either<_i11.Failure, _i13.TvShowDetail>>.value(
                      _FakeEither_0<_i11.Failure, _i13.TvShowDetail>()))
          as _i7.Future<_i2.Either<_i11.Failure, _i13.TvShowDetail>>);
  @override
  _i7.Future<_i2.Either<_i11.Failure, List<_i12.TvShow>>>
      getTvShowsRecommendations(int? id) => (super.noSuchMethod(
              Invocation.method(#getTvShowsRecommendations, [id]),
              returnValue:
                  Future<_i2.Either<_i11.Failure, List<_i12.TvShow>>>.value(
                      _FakeEither_0<_i11.Failure, List<_i12.TvShow>>()))
          as _i7.Future<_i2.Either<_i11.Failure, List<_i12.TvShow>>>);
  @override
  _i7.Future<_i2.Either<_i11.Failure, List<_i12.TvShow>>> searchTvShows(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTvShows, [query]),
              returnValue:
                  Future<_i2.Either<_i11.Failure, List<_i12.TvShow>>>.value(
                      _FakeEither_0<_i11.Failure, List<_i12.TvShow>>()))
          as _i7.Future<_i2.Either<_i11.Failure, List<_i12.TvShow>>>);
  @override
  _i7.Future<_i2.Either<_i11.Failure, String>> saveWatchlist(
          _i13.TvShowDetail? tvShow) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [tvShow]),
              returnValue: Future<_i2.Either<_i11.Failure, String>>.value(
                  _FakeEither_0<_i11.Failure, String>()))
          as _i7.Future<_i2.Either<_i11.Failure, String>>);
  @override
  _i7.Future<_i2.Either<_i11.Failure, String>> removeWatchlist(
          _i13.TvShowDetail? tvShow) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [tvShow]),
              returnValue: Future<_i2.Either<_i11.Failure, String>>.value(
                  _FakeEither_0<_i11.Failure, String>()))
          as _i7.Future<_i2.Either<_i11.Failure, String>>);
  @override
  _i7.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: Future<bool>.value(false)) as _i7.Future<bool>);
  @override
  _i7.Future<_i2.Either<_i11.Failure, List<_i12.TvShow>>>
      getWatchlistTvShows() =>
          (super.noSuchMethod(Invocation.method(#getWatchlistTvShows, []),
                  returnValue:
                      Future<_i2.Either<_i11.Failure, List<_i12.TvShow>>>.value(
                          _FakeEither_0<_i11.Failure, List<_i12.TvShow>>()))
              as _i7.Future<_i2.Either<_i11.Failure, List<_i12.TvShow>>>);
  @override
  _i7.Future<_i2.Either<_i11.Failure, _i14.TvShowSeason>> getTvShowSeason(
          int? id, int? seasonNumber) =>
      (super.noSuchMethod(
              Invocation.method(#getTvShowSeason, [id, seasonNumber]),
              returnValue:
                  Future<_i2.Either<_i11.Failure, _i14.TvShowSeason>>.value(
                      _FakeEither_0<_i11.Failure, _i14.TvShowSeason>()))
          as _i7.Future<_i2.Either<_i11.Failure, _i14.TvShowSeason>>);
}

/// A class which mocks [TvShowRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvShowRemoteDataSource extends _i1.Mock
    implements _i15.TvShowRemoteDataSource {
  MockTvShowRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<List<_i16.TvShowModel>> getNowPlayingTvShows() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingTvShows, []),
              returnValue:
                  Future<List<_i16.TvShowModel>>.value(<_i16.TvShowModel>[]))
          as _i7.Future<List<_i16.TvShowModel>>);
  @override
  _i7.Future<List<_i16.TvShowModel>> getPopularTvShows() =>
      (super.noSuchMethod(Invocation.method(#getPopularTvShows, []),
              returnValue:
                  Future<List<_i16.TvShowModel>>.value(<_i16.TvShowModel>[]))
          as _i7.Future<List<_i16.TvShowModel>>);
  @override
  _i7.Future<List<_i16.TvShowModel>> getTopRatedTvShows() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedTvShows, []),
              returnValue:
                  Future<List<_i16.TvShowModel>>.value(<_i16.TvShowModel>[]))
          as _i7.Future<List<_i16.TvShowModel>>);
  @override
  _i7.Future<_i3.TvShowDetailResponse> getTvShowDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvShowDetail, [id]),
              returnValue: Future<_i3.TvShowDetailResponse>.value(
                  _FakeTvShowDetailResponse_1()))
          as _i7.Future<_i3.TvShowDetailResponse>);
  @override
  _i7.Future<List<_i16.TvShowModel>> getTvShowRecommendations(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvShowRecommendations, [id]),
              returnValue:
                  Future<List<_i16.TvShowModel>>.value(<_i16.TvShowModel>[]))
          as _i7.Future<List<_i16.TvShowModel>>);
  @override
  _i7.Future<List<_i16.TvShowModel>> searchTvShows(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTvShows, [query]),
              returnValue:
                  Future<List<_i16.TvShowModel>>.value(<_i16.TvShowModel>[]))
          as _i7.Future<List<_i16.TvShowModel>>);
  @override
  _i7.Future<_i4.TvShowSeasons> getTvShowSeasons(int? id, int? seasonNumber) =>
      (super.noSuchMethod(
              Invocation.method(#getTvShowSeasons, [id, seasonNumber]),
              returnValue:
                  Future<_i4.TvShowSeasons>.value(_FakeTvShowSeasons_2()))
          as _i7.Future<_i4.TvShowSeasons>);
}

/// A class which mocks [TvShowLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvShowLocalDataSource extends _i1.Mock
    implements _i17.TvShowLocalDataSource {
  MockTvShowLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<String> insertWatchlist(_i9.TvShowTable? tvShow) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [tvShow]),
          returnValue: Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<String> removeWatchlist(_i9.TvShowTable? tvShow) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [tvShow]),
          returnValue: Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<_i9.TvShowTable?> getTvShowById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvShowById, [id]),
              returnValue: Future<_i9.TvShowTable?>.value())
          as _i7.Future<_i9.TvShowTable?>);
  @override
  _i7.Future<List<_i9.TvShowTable>> getWatchlistTvShow() => (super.noSuchMethod(
          Invocation.method(#getWatchlistTvShow, []),
          returnValue: Future<List<_i9.TvShowTable>>.value(<_i9.TvShowTable>[]))
      as _i7.Future<List<_i9.TvShowTable>>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i5.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i5.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: Future<_i5.Response>.value(_FakeResponse_3()))
          as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: Future<_i5.Response>.value(_FakeResponse_3()))
          as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i18.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i5.Response>.value(_FakeResponse_3()))
          as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i18.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i5.Response>.value(_FakeResponse_3()))
          as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i18.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i5.Response>.value(_FakeResponse_3()))
          as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i18.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i5.Response>.value(_FakeResponse_3()))
          as _i7.Future<_i5.Response>);
  @override
  _i7.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: Future<String>.value('')) as _i7.Future<String>);
  @override
  _i7.Future<_i19.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: Future<_i19.Uint8List>.value(_i19.Uint8List(0)))
          as _i7.Future<_i19.Uint8List>);
  @override
  _i7.Future<_i5.StreamedResponse> send(_i5.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue:
                  Future<_i5.StreamedResponse>.value(_FakeStreamedResponse_4()))
          as _i7.Future<_i5.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
}
